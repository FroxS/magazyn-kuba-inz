<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Added" xml:space="preserve">
    <value>Added</value>
  </data>
  <data name="AddGroupForProduct" xml:space="preserve">
    <value>Add group for product</value>
  </data>
  <data name="AddItemsStates" xml:space="preserve">
    <value>Add items states</value>
  </data>
  <data name="AddPoint" xml:space="preserve">
    <value>Add point</value>
  </data>
  <data name="AddProducts" xml:space="preserve">
    <value>Add products</value>
  </data>
  <data name="AddRack" xml:space="preserve">
    <value>Add rack</value>
  </data>
  <data name="AddRacks" xml:space="preserve">
    <value>Add racks</value>
  </data>
  <data name="AddStatusesForProduct" xml:space="preserve">
    <value>Add statuses for product</value>
  </data>
  <data name="AddSuppliers" xml:space="preserve">
    <value>Add suppliers</value>
  </data>
  <data name="AddToPackage" xml:space="preserve">
    <value>Add to package</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="Application" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="ApplicationError" xml:space="preserve">
    <value>Application error</value>
  </data>
  <data name="ApplicationErrorMessage" xml:space="preserve">
    <value>An application error has occurred</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure</value>
  </data>
  <data name="AreYouSureToDelete" xml:space="preserve">
    <value>Are you sure to delete</value>
  </data>
  <data name="AskAddOrder" xml:space="preserve">
    <value>Add an order</value>
  </data>
  <data name="AskRemoveOrder" xml:space="preserve">
    <value>Remove the order</value>
  </data>
  <data name="AskRemoveProduct" xml:space="preserve">
    <value>Remove the product</value>
  </data>
  <data name="AvailableProducts" xml:space="preserve">
    <value>Available products</value>
  </data>
  <data name="BasicData" xml:space="preserve">
    <value>Basic data</value>
  </data>
  <data name="CannotRemovedPackageProductProbablyInOffer" xml:space="preserve">
    <value>Cannot be removed from the package, this product is probably already in offer</value>
  </data>
  <data name="ChangeFlor" xml:space="preserve">
    <value>Change flor</value>
  </data>
  <data name="ChangeLanguageRestartApplication" xml:space="preserve">
    <value>After changed language restart application</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="CheckData" xml:space="preserve">
    <value>Check data</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="CompletionDate" xml:space="preserve">
    <value>Completion date</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ConfirmPasswordIsRequired" xml:space="preserve">
    <value>Confirm password is required</value>
  </data>
  <data name="Connections" xml:space="preserve">
    <value>Connections</value>
  </data>
  <data name="ConnectWith" xml:space="preserve">
    <value>Connect with</value>
  </data>
  <data name="Coppy" xml:space="preserve">
    <value>Coppy</value>
  </data>
  <data name="Corridor" xml:space="preserve">
    <value>Corridor</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="CreatePackage" xml:space="preserve">
    <value>Create package</value>
  </data>
  <data name="Creator" xml:space="preserve">
    <value>Creator</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Direction" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Elements" xml:space="preserve">
    <value>Elements</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailisIncorrect" xml:space="preserve">
    <value>Email is incorrect</value>
  </data>
  <data name="EmailIsRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="ErrorDuringMovingItems" xml:space="preserve">
    <value>Error during moving items</value>
  </data>
  <data name="ErrorLoginWindowNotExist" xml:space="preserve">
    <value>Login window not exist</value>
  </data>
  <data name="ErrorMainWindowNotExist" xml:space="preserve">
    <value>Main window not exist</value>
  </data>
  <data name="ErrorMaxLength" xml:space="preserve">
    <value>Maximum length is </value>
  </data>
  <data name="ErrorPasswordsAreNotTheSame" xml:space="preserve">
    <value>The passwords are not the same</value>
  </data>
  <data name="ErrorUserIsNotActive" xml:space="preserve">
    <value>User is not active</value>
  </data>
  <data name="ErrorWhileAssigningProductsToRack" xml:space="preserve">
    <value>Error while assigning products to the rack</value>
  </data>
  <data name="ErrorWhileSaving" xml:space="preserve">
    <value>Error while saving</value>
  </data>
  <data name="ExistInDatabase" xml:space="preserve">
    <value>Exist in database</value>
  </data>
  <data name="FailedToAddOrder" xml:space="preserve">
    <value>Failed to add order</value>
  </data>
  <data name="FailedToAddProduct" xml:space="preserve">
    <value>FailedToAddProduct</value>
  </data>
  <data name="FailedToGenerateWay" xml:space="preserve">
    <value>Failed to generate way</value>
  </data>
  <data name="FailedToPrepared" xml:space="preserve">
    <value>Failed to prepared</value>
  </data>
  <data name="FailedToRemove" xml:space="preserve">
    <value>Failed to remove</value>
  </data>
  <data name="FailedToReserved" xml:space="preserve">
    <value>Failed to reserved</value>
  </data>
  <data name="FailedToSave" xml:space="preserve">
    <value>Failed to save</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="Flor" xml:space="preserve">
    <value>Flor</value>
  </data>
  <data name="Flors" xml:space="preserve">
    <value>Flors</value>
  </data>
  <data name="GenerateMap" xml:space="preserve">
    <value>Generate map</value>
  </data>
  <data name="GenerateWay" xml:space="preserve">
    <value>Generate way</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ItemState" xml:space="preserve">
    <value>Item state</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginIsRequired" xml:space="preserve">
    <value>Login is required</value>
  </data>
  <data name="Log_in" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Lp" xml:space="preserve">
    <value>Lp</value>
  </data>
  <data name="MainSettings" xml:space="preserve">
    <value>Main settings</value>
  </data>
  <data name="Margin" xml:space="preserve">
    <value>Margin</value>
  </data>
  <data name="MaxDepth" xml:space="preserve">
    <value>Max depth</value>
  </data>
  <data name="MaxHeight" xml:space="preserve">
    <value>Max height</value>
  </data>
  <data name="MaxWeight" xml:space="preserve">
    <value>Max weight</value>
  </data>
  <data name="MaxWidth" xml:space="preserve">
    <value>Max width</value>
  </data>
  <data name="MessagePasswordChangedSuccessfully" xml:space="preserve">
    <value>Password changed successfully</value>
  </data>
  <data name="MoveTo" xml:space="preserve">
    <value>Move to</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameIsRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="NameOfDatabase" xml:space="preserve">
    <value>Database name</value>
  </data>
  <data name="NewOrder" xml:space="preserve">
    <value>New order</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>Next page</value>
  </data>
  <data name="NextStep" xml:space="preserve">
    <value>Next step</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="OrderIsOpened" xml:space="preserve">
    <value>Order is opened</value>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="OrdersFromSupplier" xml:space="preserve">
    <value>Orders from supplier</value>
  </data>
  <data name="OrdersToRealizationInGivenMonth" xml:space="preserve">
    <value>Orders to realization in a given month</value>
  </data>
  <data name="PackageContainsProductsRemoveThemFromRack" xml:space="preserve">
    <value>The package contains products, remove them from the rack</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordIsRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="PersonalData" xml:space="preserve">
    <value>Personal data</value>
  </data>
  <data name="Point" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="PrevPage" xml:space="preserve">
    <value>Prev page</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="ProductStates" xml:space="preserve">
    <value>Product states</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="Racks" xml:space="preserve">
    <value>Racks</value>
  </data>
  <data name="RealizationDate" xml:space="preserve">
    <value>Realization date</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemovedOrder" xml:space="preserve">
    <value>Removed order</value>
  </data>
  <data name="RemovedProduct" xml:space="preserve">
    <value>Removed product</value>
  </data>
  <data name="RemovePackage" xml:space="preserve">
    <value>Remove package</value>
  </data>
  <data name="Removing" xml:space="preserve">
    <value>Removing</value>
  </data>
  <data name="ReserveProducts" xml:space="preserve">
    <value>Reserve products</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Row" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchProduct" xml:space="preserve">
    <value>Search product</value>
  </data>
  <data name="SelectUnit" xml:space="preserve">
    <value>Select unit</value>
  </data>
  <data name="Server" xml:space="preserve">
    <value>Server</value>
  </data>
  <data name="SetAsDone" xml:space="preserve">
    <value>Set as done</value>
  </data>
  <data name="SetAsReceived" xml:space="preserve">
    <value>Set as received</value>
  </data>
  <data name="SetAsStartupPoint" xml:space="preserve">
    <value>Set as startup point</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Step2" xml:space="preserve">
    <value>Step2</value>
  </data>
  <data name="StorageUnits" xml:space="preserve">
    <value>Storage units</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Style</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="SuccesfullPrepared" xml:space="preserve">
    <value>Succesfull prepared</value>
  </data>
  <data name="SuccesfullReserved" xml:space="preserve">
    <value>Succesfull reserved</value>
  </data>
  <data name="SuccessfulCreatedUser" xml:space="preserve">
    <value>Successful created user</value>
  </data>
  <data name="SuccessfulRemoved" xml:space="preserve">
    <value>Successful removed</value>
  </data>
  <data name="Supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="Suppliers" xml:space="preserve">
    <value>Suppliers</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserIsEmpty" xml:space="preserve">
    <value>User is empty</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="UserSettings" xml:space="preserve">
    <value>User settings</value>
  </data>
  <data name="WareHouse" xml:space="preserve">
    <value>Ware house</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="WareHouseImage" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\warehoudebg.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="WarehouseItem" xml:space="preserve">
    <value>Warehouse item</value>
  </data>
  <data name="WareHouseItems" xml:space="preserve">
    <value>WareHouse items</value>
  </data>
  <data name="Way" xml:space="preserve">
    <value>Way</value>
  </data>
  <data name="Wayfinding" xml:space="preserve">
    <value>Wayfinding</value>
  </data>
  <data name="WeightDiscrepancy" xml:space="preserve">
    <value>Weight discrepancy</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="WindowsAuthorization" xml:space="preserve">
    <value>Windows authorization</value>
  </data>
  <data name="WrongEmail" xml:space="preserve">
    <value>Wrong email</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Zoom" xml:space="preserve">
    <value>Zoom</value>
  </data>
</root>