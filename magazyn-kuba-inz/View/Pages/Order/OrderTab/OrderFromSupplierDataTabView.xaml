<UserControl x:Class="Warehouse.View.Pages.OrderFromSupplierDataTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Warehouse.View.Pages"
             xmlns:controls="clr-namespace:Warehouse.Theme.Controls;assembly=Warehouse.Theme"
             xmlns:enum="clr-namespace:Warehouse.Models.Enums;assembly=Warehouse.Models"
             xmlns:vm="clr-namespace:Warehouse.ViewModel.Pages;assembly=Warehouse.ViewModels"
             xmlns:res="clr-namespace:Warehouse.Core.Properties;assembly=Warehouse.Core"
             xmlns:conv="clr-namespace:Warehouse.Conventers"
             d:DataContext="{d:DesignInstance Type=vm:OrderFromSupplierDataTabViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Margin="20">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>

        <Grid Margin="0" Grid.Column="0" IsEnabled="{Binding Parent.Enabled}"
              HorizontalAlignment="Left">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" HorizontalAlignment="Stretch">
                <Label Content="{Binding Name, FallbackValue=Test}"
                       FontSize="14"
                       VerticalAlignment="Center"
                       FontWeight="Bold"/>
            </Grid>

            <Grid Grid.IsSharedSizeScope="True" Grid.Row="2"
                              Margin="10"
                              VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" SharedSizeGroup="FieldName"/>
                        <ColumnDefinition MinWidth="200"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Content="{x:Static res:Resources.Name}" Style="{DynamicResource FormLabel}"/>

                    <controls:TextBoxImage Text="{Binding Name, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, Mode=TwoWay}"
                                                       Grid.Column="1"
                                                       Style="{StaticResource FormTextBoxImage}"
                                                       Tag="{x:Static res:Resources.Name}"/>
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" SharedSizeGroup="FieldName"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Content="{x:Static res:Resources.Price}" Style="{DynamicResource FormLabel}"/>

                    <controls:TextBoxImage Text="{Binding TotalPrice, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                           Grid.Column="1"
                                           IsReadOnly="True"
                                           Style="{StaticResource FormTextBoxImage}"
                                           Tag="{x:Static res:Resources.Price}"/>
                </Grid>

                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" SharedSizeGroup="FieldName"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Content="{x:Static res:Resources.CompletionDate}" Style="{DynamicResource FormLabel}"/>

                    <DatePicker SelectedDate="{Binding RealizationDate, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, Mode=TwoWay}"
                                            Grid.Column="1"
                                            Height="40"
                                            Style="{StaticResource FormDatePicker}"/>

                </Grid>

                
            </Grid>
        </Grid>

        <StackPanel Grid.Column="1">

            <controls:ButtonPath IconPath="{StaticResource Save}"
                                 Text="{x:Static res:Resources.Save}"
                                 Padding="0"
                                 Margin="10 5"
                                 ToolTip="{x:Static res:Resources.Save}"
                                 Visibility="{Binding ToAdd,Converter={conv:BoolToVisibleConventer}, ConverterParameter=True, UpdateSourceTrigger=PropertyChanged}"
                                 Foreground="{DynamicResource PrimaryColorBrush}"
                                 Command="{Binding SaveCommand}"/>


            <controls:ButtonPath IconPath="{StaticResource Delivery}"
                                 Foreground="{Binding Source={x:Static enum:EOrderState.DeliveryPrepared}, Converter={conv:OrderStateToColorConventer}}"
                                 Text="{x:Static res:Resources.SetAsDone}"
                                 Padding="0"
                                 Margin="10 5"
                                 ToolTip="{x:Static res:Resources.SetAsDone}"
                                 Visibility="{Binding CanPrepared, Converter={conv:BoolToVisibleConventer},ConverterParameter=True,  UpdateSourceTrigger=PropertyChanged}"
                                 Command="{Binding SetStateCommand}"
                                 CommandParameter="{x:Static enum:EOrderState.DeliveryPrepared}"/>


            <controls:ButtonPath IconPath="{StaticResource Forklift}"
                                 Foreground="{Binding Source={x:Static enum:EOrderState.Received}, Converter={conv:OrderStateToColorConventer}}"
                                 Text="{x:Static res:Resources.SetAsReceived}"
                                 Padding="0"
                                 Margin="10 5"
                                 ToolTip="{x:Static res:Resources.SetAsReceived}"
                                 Visibility="{Binding CanReceived, Converter={conv:BoolToVisibleConventer},ConverterParameter=True,  UpdateSourceTrigger=PropertyChanged}"
                                 Command="{Binding SetStateCommand}"
                                 CommandParameter="{x:Static enum:EOrderState.Received}"/>



        </StackPanel>

    </Grid>
</UserControl>
