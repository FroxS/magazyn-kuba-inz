<UserControl x:Class="Warehouse.View.Pages.ProtuctStateTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Warehouse.View.Pages"
             xmlns:vm="clr-namespace:Warehouse.ViewModel.Pages;assembly=Warehouse.ViewModels"
             xmlns:enum="clr-namespace:Warehouse.Models.Enums;assembly=Warehouse.Models"
             xmlns:conv="clr-namespace:Warehouse.Conventers"
             xmlns:controls="clr-namespace:Warehouse.Theme.Controls;assembly=Warehouse.Theme"
             xmlns:res="clr-namespace:Warehouse.Core.Properties;assembly=Warehouse.Core"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="400"
             d:DataContext="{d:DesignInstance vm:ProtuctStateTabViewModel}">
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Margin="0 5 10 0" Grid.Row="0">
            <controls:TextBoxImage Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged}"
                                   Grid.Column="1"
                                   IconPath="{StaticResource Search}"
                                   Width="200"
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource FormTextBoxImage}"
                                   Tag="{x:Static res:Resources.Search}"/>

        </Grid>

        <Grid Grid.Row="1">
            <controls:MyDataGrid SearchText="{Binding SearchString, UpdateSourceTrigger=PropertyChanged}"
                                 FilterItems="{Binding Items, UpdateSourceTrigger=PropertyChanged}"
                                 SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                                 AutoGenerateColumns="False"
                                 CanUserDeleteRows="False"
                                 CanUserResizeColumns="True"
                                 SelectionMode="Extended"
                                 IsReadOnly="True">
                <DataGrid.GroupStyle>
                    <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}">
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </DataGrid.GroupStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{x:Static res:Resources.Name}"
                                        MinWidth="200"
                                        Width="*"
                                        Binding="{Binding Product.Name}"/>
                </DataGrid.Columns>

            <DataGrid.ContextMenu>
                <ContextMenu >
                        <MenuItem Header="{x:Static res:Resources.MoveTo}" ItemsSource="{Binding StatusesToMove, UpdateSourceTrigger=PropertyChanged}" >
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}" >
                                <Setter Property="Header" Value="{Binding Name}"/>
                                <Setter Property="Command" Value="{Binding DataContext.MoveToStateCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
                                
                                    <Setter Property="CommandParameter" Value="{Binding State, UpdateSourceTrigger=PropertyChanged}"/>
            
                                <Setter Property="CommandParameter">
                                    <Setter.Value>
                                        <MultiBinding Converter="{conv:MulitBindingParameterConventer}">
                                            <Binding Path="State" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="PlacementTarget.SelectedItems" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>

                    <MenuItem Header="{x:Static res:Resources.Add}" IsEnabled="{Binding CanAddNew}"
                              Command="{Binding AddNewCommand}"
                              />
                </ContextMenu>
            </DataGrid.ContextMenu>
            
        </controls:MyDataGrid>
        </Grid>

        <!--<controls:MyDataGrid ItemsSource="{Binding Items}"  
                  SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}">
            --><!--<controls:MyDataGrid.Columns>
                <DataGridTextColumn Header="Nazwa produktu"
                                    MinWidth="200"
                                    Width="*"
                                    Binding="{Binding Product.Name}"/>
            </controls:MyDataGrid.Columns>--><!--
        </controls:MyDataGrid>-->

        
    </Grid>
</UserControl>
