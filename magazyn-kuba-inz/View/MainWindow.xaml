<Window x:Class="Warehouse.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Warehouse.View"
        xmlns:controls="clr-namespace:Warehouse.Controls"
        xmlns:controls2="clr-namespace:Warehouse.Theme.Controls;assembly=Warehouse.Theme"
        xmlns:custom="clr-namespace:Warehouse.Theme.Controls;assembly=Warehouse.Theme"
        xmlns:helpers="clr-namespace:Warehouse.Helper"
        xmlns:conventers="clr-namespace:Warehouse.Conventers"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:design="clr-namespace:Warehouse.ViewModel.Design;assembly=Warehouse.ViewModels" 
        xmlns:innermessage="clr-namespace:Warehouse.View.InnerDialog"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Width="1200"
        Height="800"
        ResizeMode="CanResizeWithGrip"
        Background="{DynamicResource BackgroundColorBrush}"
        Foreground="{DynamicResource FontColorBrush}"
        BorderThickness="0"
        Style="{StaticResource CustomWindowsStyle}">
    <Grid x:Name="parent" >
        <custom:ModalControl x:Name="Modal" Panel.ZIndex="10"
                             DataContext="{Binding InnerDialog.InnerDialogVM,
                                                   Source={x:Static helpers:AppHelper.Instance}, 
                                                   UpdateSourceTrigger=PropertyChanged}"
                             IsOpen="{Binding InnerDialog.IsInnerDialogOpen,
                                              Source={x:Static helpers:AppHelper.Instance}, 
                                              UpdateSourceTrigger=PropertyChanged}">
            <custom:ModalControl.Background>
                <SolidColorBrush Color="Gray" Opacity=".5"/>
            </custom:ModalControl.Background>
            <innermessage:InnerDialogBaseControl/>
        </custom:ModalControl>

        <Border >
            <Border.Effect>
                <BlurEffect Radius="0" KernelType="Gaussian"/>
            </Border.Effect>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!--#region  Menu-->

                    <controls:LeftMenuView Grid.Column="0" DataContext="{Binding Navigation,
                                                         Source={x:Static helpers:AppHelper.Instance}, 
                                                         UpdateSourceTrigger=PropertyChanged}"
                                            d:DataContext="{x:Static design:DesignNavigationViewModel.Instance}"/>

                    <!--#endregion-->

                    <Grid Grid.Column="1">
                        <!--#region Page-->
                        <Grid Grid.Row="1" Grid.RowSpan="2">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Grid Visibility="{Binding MessageService.Message,
                                                         Source={x:Static helpers:AppHelper.Instance}, 
                                                         UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True, Converter={StaticResource NullToVisible}}"
                          >

                                <Border Background="{Binding MessageService.Type,
                                                         Source={x:Static helpers:AppHelper.Instance}, 
                                                         UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True, Converter={StaticResource MessageTypeToColor}}"
                                        Panel.ZIndex="-2"
                                        Opacity=".7"/>

                                <TextBlock VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Padding="10,2"
                                           Text="{Binding MessageService.Message,
                                                          Source={x:Static helpers:AppHelper.Instance}, 
                                                          UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True, 
                                                          FallbackValue=Testowa wiadomość}"/>
                                <Button Content="X"
                                        Width="20"
                                        Height="20"
                                        VerticalAlignment="Top"
                                        Command="{Binding MessageService.HideMessageCommand,
                                                                 Source={x:Static helpers:AppHelper.Instance}, 
                                                                 UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"
                                        HorizontalAlignment="Right"/>
                            </Grid>
                            <controls:PageHost Grid.Row="1"
                                               x:Name="Test"
                                               IsEnabled="{Binding Application.IsTaskRunning, Source={x:Static helpers:AppHelper.Instance}, Converter={conventers:InverseBoolConventer}, UpdateSourceTrigger=PropertyChanged}"
                                               CurrentPage="{Binding Navigation.Page,
                                                         Source={x:Static helpers:AppHelper.Instance}, 
                                                         UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"
                                   
                                              d:DataContext="{x:Static design:DesignNavigationViewModel.Instance}">
                            </controls:PageHost>
                        </Grid>
                        <!--#endregion-->
                    </Grid>
                </Grid>

                <Border Height="40"
                        Grid.Row="1"
                        BorderThickness="0,1,0,0"
                        BorderBrush="{DynamicResource BorderColorBrush}">

                    <Grid VerticalAlignment="Center"
                          Margin="10,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock HorizontalAlignment="Left"
                                   Grid.Row="0"
                                   VerticalAlignment="Center">
                            <Run Text="Użytkownik"/><Run Text=" :"/>
                            <Run Text="{Binding Application.User.Name,
                                                Source={x:Static helpers:AppHelper.Instance}, 
                                                UpdateSourceTrigger=PropertyChanged,
                                                FallbackValue=Admin}"/>
                        </TextBlock>

                        <TextBlock HorizontalAlignment="Right"
                                   Grid.Row="0"
                                   Text="{Binding Source={x:Static sys:DateTime.Now},
                                   StringFormat='{}{0:dddd, dd MMMM yyyy}'}"/>

                        <ProgressBar Grid.Row="1" 
                                     Height="10"
                                     Background="Transparent"
                                     IsIndeterminate="{Binding Application.IsTaskRunning,
                                                               Source={x:Static helpers:AppHelper.Instance}, 
                                                               UpdateSourceTrigger=PropertyChanged,
                                                               FallbackValue=False}"
                                     BorderThickness="0"
                                     Foreground="{DynamicResource PrimaryColorBrush}"/>

                    </Grid>

                </Border>

            </Grid>
        </Border>
    </Grid>
    
    <Window.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding MessageService.HideMessageCommand,
                                                  Source={x:Static helpers:AppHelper.Instance}, 
                                                  UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"/>
    </Window.InputBindings>
</Window>
