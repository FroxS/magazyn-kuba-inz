// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using magazyn_kuba_inz.EF;

#nullable disable

namespace magazyn_kuba_inz.EF.Migrations
{
    [DbContext(typeof(WarehouseDbContext))]
    [Migration("20230221214502_First migration")]
    partial class Firstmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 21, 22, 45, 2, 114, DateTimeKind.Local).AddTicks(1854));

                    b.Property<Guid>("Id_User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("RealizationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id_User");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.OrderElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("Id_Order")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_StorageItem")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id_Order");

                    b.HasIndex("Id_StorageItem");

                    b.ToTable("OrderElement");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<Guid>("Id_Group")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double>("Price")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(2)
                        .HasColumnType("float(2)")
                        .HasDefaultValue(0.0);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Id_Group");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.ProductGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProductGroup");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Rack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Corridor")
                        .HasColumnType("int");

                    b.Property<double>("Depth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<int>("Flors")
                        .HasColumnType("int");

                    b.Property<double>("Height")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<long>("Space_amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(1L);

                    b.Property<double>("Width")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("Id");

                    b.ToTable("Rack");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.RackPosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Flor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<Guid>("Id_Rack")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.HasKey("Id");

                    b.HasIndex("Id_Rack");

                    b.ToTable("RackPosition");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_RackPosition")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_StorageUnit")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_RackPosition");

                    b.HasIndex("Id_StorageUnit");

                    b.ToTable("StorageItem");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageItemCollection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Product")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_StorageItem")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id_Product");

                    b.HasIndex("Id_StorageItem");

                    b.ToTable("StorageItemCollection");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MaxDepth")
                        .HasPrecision(3)
                        .HasColumnType("float(3)");

                    b.Property<double>("MaxHeight")
                        .HasPrecision(3)
                        .HasColumnType("float(3)");

                    b.Property<double>("MaxWeight")
                        .HasPrecision(3)
                        .HasColumnType("float(3)");

                    b.Property<double>("MaxWidth")
                        .HasPrecision(3)
                        .HasColumnType("float(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RackUnitCapacity")
                        .HasMaxLength(1)
                        .HasPrecision(3)
                        .HasColumnType("float(3)");

                    b.HasKey("Id");

                    b.ToTable("StorageUnit");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Order", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.OrderElement", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("Id_Order")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.StorageItem", "StorageItem")
                        .WithMany("OrderElements")
                        .HasForeignKey("Id_StorageItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("StorageItem");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Product", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.ProductGroup", "Group")
                        .WithMany("Products")
                        .HasForeignKey("Id_Group")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.RackPosition", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.Rack", "Rack")
                        .WithMany("Rack_Positions")
                        .HasForeignKey("Id_Rack")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rack");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageItem", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.RackPosition", "RackPosition")
                        .WithMany("StorageItems")
                        .HasForeignKey("Id_RackPosition")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.StorageUnit", "StorageUnit")
                        .WithMany("StorageItems")
                        .HasForeignKey("Id_StorageUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RackPosition");

                    b.Navigation("StorageUnit");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageItemCollection", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.Product", "Product")
                        .WithMany("StorageItemCollections")
                        .HasForeignKey("Id_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.StorageItem", "StorageItem")
                        .WithMany("StorageItems")
                        .HasForeignKey("Id_StorageItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StorageItem");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Product", b =>
                {
                    b.Navigation("StorageItemCollections");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.ProductGroup", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Rack", b =>
                {
                    b.Navigation("Rack_Positions");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.RackPosition", b =>
                {
                    b.Navigation("StorageItems");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageItem", b =>
                {
                    b.Navigation("OrderElements");

                    b.Navigation("StorageItems");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageUnit", b =>
                {
                    b.Navigation("StorageItems");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
