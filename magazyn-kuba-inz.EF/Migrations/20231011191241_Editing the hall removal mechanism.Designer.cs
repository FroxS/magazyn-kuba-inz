// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using magazyn_kuba_inz.EF;

#nullable disable

namespace magazyn_kuba_inz.EF.Migrations
{
    [DbContext(typeof(WarehouseDbContext))]
    [Migration("20231011191241_Editing the hall removal mechanism")]
    partial class Editingthehallremovalmechanism
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductWareHouseImage", b =>
                {
                    b.Property<Guid>("ImagesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImagesID", "ProductsID");

                    b.HasIndex("ProductsID");

                    b.ToTable("ProductWareHouseImage");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Hall", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Hall");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.ItemState", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanRealizeOrder")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("InWareHouse")
                        .HasColumnType("bit");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ItemState");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Order", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RealizationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ID_User");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.OrderProduct", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_Order")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Product")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_StorageItem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ID_Order");

                    b.HasIndex("ID_Product");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ID_Group")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Status")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Supplier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("ID");

                    b.HasIndex("ID_Group");

                    b.HasIndex("ID_Status");

                    b.HasIndex("ID_Supplier");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.ProductGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("ProductGroup");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.ProductStatus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("ProductStatus");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Rack", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AmountSpace")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<int>("Corridor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Deepth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<int>("Direction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Flors")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<double>("Heigth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("ID_Hall")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<double>("Width")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("ID");

                    b.HasIndex("ID_Hall");

                    b.ToTable("Rack");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_OrderItem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Product")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_StorageItem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ID_OrderItem")
                        .IsUnique();

                    b.HasIndex("ID_Product");

                    b.HasIndex("ID_StorageItem");

                    b.ToTable("StorageItem");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageItemPackage", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_Rack")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_StorageUnit")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ID_Rack");

                    b.HasIndex("ID_StorageUnit");

                    b.ToTable("StorageItemPackage");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageUnit", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<double>("MaxDepth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("MaxHeight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("MaxWeight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("MaxWidth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StorageUnit");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Supplier", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.WareHouseImage", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Img")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.WareHouseItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_Product")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_State")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Lp")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ID_Product");

                    b.HasIndex("ID_State");

                    b.ToTable("WareHouseItem");
                });

            modelBuilder.Entity("ProductWareHouseImage", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.WareHouseImage", null)
                        .WithMany()
                        .HasForeignKey("ImagesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Order", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.OrderProduct", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("ID_Order")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ID_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Product", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.ProductGroup", "Group")
                        .WithMany("Products")
                        .HasForeignKey("ID_Group")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.ProductStatus", "Status")
                        .WithMany("Products")
                        .HasForeignKey("ID_Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("ID_Supplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Status");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Rack", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.Hall", "Hall")
                        .WithMany("Racks")
                        .HasForeignKey("ID_Hall")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageItem", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.OrderProduct", "OrderItem")
                        .WithOne("StorageItem")
                        .HasForeignKey("magazyn_kuba_inz.Models.WareHouse.StorageItem", "ID_OrderItem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.Product", "Product")
                        .WithMany("StorageItemCollection")
                        .HasForeignKey("ID_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.StorageItemPackage", "Package")
                        .WithMany("Items")
                        .HasForeignKey("ID_StorageItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");

                    b.Navigation("Package");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageItemPackage", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.Rack", "Rack")
                        .WithMany("StorageItems")
                        .HasForeignKey("ID_Rack")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.StorageUnit", "StorageUnit")
                        .WithMany("StorageItems")
                        .HasForeignKey("ID_StorageUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rack");

                    b.Navigation("StorageUnit");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.WareHouseItem", b =>
                {
                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.Product", "Product")
                        .WithMany("WareHouseItems")
                        .HasForeignKey("ID_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("magazyn_kuba_inz.Models.WareHouse.ItemState", "State")
                        .WithMany("Items")
                        .HasForeignKey("ID_State")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("State");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Hall", b =>
                {
                    b.Navigation("Racks");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.ItemState", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.OrderProduct", b =>
                {
                    b.Navigation("StorageItem");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("StorageItemCollection");

                    b.Navigation("WareHouseItems");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.ProductGroup", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.ProductStatus", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Rack", b =>
                {
                    b.Navigation("StorageItems");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageItemPackage", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.StorageUnit", b =>
                {
                    b.Navigation("StorageItems");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.Supplier", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("magazyn_kuba_inz.Models.WareHouse.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
